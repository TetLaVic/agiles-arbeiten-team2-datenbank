{"version":3,"sources":["redux/ContactForm/ContactForm-actions.js","components/AppBar/SiteNav/SiteNav.module.css","components/AppBar/AppBar.module.css","redux/ContactForm/ContactForm-reducer.js","redux/store.js","components/AppBar/SiteNav/SiteNav.js","components/AppBar/AppBar.js","App.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterChange","module","exports","actions","itemsReducer","createReducer","_","payload","state","find","contact","name","alert","filter","id","filterReducer","loading","contactsReducer","combineReducers","items","rootReducer","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","SiteNav","className","styles","SiteNavLink","to","NavLink","activeClassName","NavLinkActive","AppBar","Navbar","bg","variant","TalentManagement","lazy","Profile","App","fallback","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yJAAA,WAIMA,EAAuBC,YAAa,iCACpCC,EAAuBD,YAAa,iCACpCE,EAAqBF,YAAa,+BAElCG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAkBL,YAAa,4BAE/BM,EAAuBN,YAAa,iCACpCO,EAAuBP,YAAa,iCACpCQ,EAAqBR,YAAa,+BA6BlCS,EAAeT,YAAa,4BAEnB,KACbG,oBACAC,oBACAC,kBACAC,uBACAC,uBACAC,qBACAC,eACAV,uBACAE,uBACAC,uB,mBCtDFQ,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,QAAU,yBAAyB,cAAgB,iC,mBCAnJD,EAAOC,QAAU,CAAC,OAAS,yB,mJCIzBR,EASES,IATFT,kBACAC,EAQEQ,IARFR,kBACAC,EAOEO,IAPFP,gBACAC,EAMEM,IANFN,qBACAC,EAKEK,IALFL,qBACAC,EAIEI,IAJFJ,mBAEAP,GAEEW,IAHFb,qBAGEa,IAFFX,sBA0BIY,GAxBFD,IADFV,mBAyBmBY,YAAc,IAAD,mBAC/Bb,GAAuB,SAACc,EAAD,YAAMC,WADE,cAE/BZ,GAAoB,SAACa,EAAD,GAAyB,IAAfD,EAAc,EAAdA,QAC7B,OAAIC,EAAMC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,OAASJ,EAAQI,SACjDC,MAAM,GAAD,OAAIL,EAAQI,KAAZ,6BACEH,GAEH,GAAN,mBAAWA,GAAX,CAAkBD,OAPY,cAS/BT,GAAuB,SAACU,EAAD,OAAUD,EAAV,EAAUA,QAAV,OACtBC,EAAMK,QAAO,qBAAGC,KAAgBP,QAVF,KAsB5BQ,EAAgBV,YAAc,GAAI,CACtC,2BAA4B,SAACC,EAAD,YAAMC,WAG9BS,EAAUX,aAAc,GAAD,mBAC1BX,GAAoB,kBAAM,KADA,cAE1BC,GAAoB,kBAAM,KAFA,cAG1BC,GAAkB,kBAAM,KAHE,cAI1BC,GAAuB,kBAAM,KAJH,cAK1BC,GAAuB,kBAAM,KALH,cAM1BC,GAAqB,kBAAM,KAND,IAedkB,EANSC,YAAgB,CACtCC,MAAOf,EACPS,OAAQE,EACRC,Y,yBCtDII,EAAcF,YAAgB,CAClCG,SAAUJ,IAQNK,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAUaC,EARDC,YAAe,CAC3BC,QAASf,EACTE,aACAc,UAAUC,I,wCCZGC,EA1BC,WACd,OACE,oBAAIC,UAAWC,IAAOF,QAAtB,SAWE,oBAAIC,UAAWC,IAAOC,YAAtB,SACE,cAAC,IAAD,CACEC,GAAG,IACHH,UAAWC,IAAOG,QAClBC,gBAAiBJ,IAAOK,cAH1B,oC,yBCPOC,EANA,WACb,OAAO,cAACC,EAAA,EAAD,CAAQC,GAAG,UAAUC,QAAQ,OAAOV,UAAWC,IAAOO,OAAtD,SACT,cAAC,EAAD,O,OCiBMG,G,MAAmBC,gBAAK,kBAC5B,wDAEIC,EAAUD,gBAAK,kBACnB,iCAuBaE,EApBH,WACV,OACE,qCACE,cAAC,EAAD,IACA,cAAC,WAAD,CACEC,SACF,2CAFA,SAKE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,cAAC,IAAD,CAAOM,KAAK,SAASC,UAAWL,IAEhC,cAAC,IAAD,CAAOK,UAAWP,aCnC5BQ,IAASC,OACP,cAAC,IAAD,UACA,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU3B,MAAOA,EAAjB,SAEE,cAAC,EAAD,UAKJ4B,SAASC,eAAe,W","file":"static/js/main.d39cce0a.chunk.js","sourcesContent":["// import types from './ContactForm-types';\r\n// import { v4 as genId } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n// const addContact = ({ name, number, id }) => {\r\n//   return {\r\n//     type: types.ADD_CONTACT,\r\n//     payload: { name, number, id: genId() },\r\n//   };\r\n// };\r\n\r\n// const addContact = createAction(\r\n//   'ContactForm/AddContact',\r\n//   ({ name, number }) => {\r\n//     return { payload: { name, number, id: genId() } };\r\n//   },\r\n// );\r\n\r\n// const deleteContact = contactId => {\r\n//   return { type: types.DELETE_CONTACT, payload: contactId };\r\n// };\r\n\r\n// const deleteContact = createAction('ContactForm/DeleteContact');\r\n\r\n// const filterChange = value => {\r\n//   return {\r\n//     type: types.FILTER_CHANGE,\r\n//     payload: value,\r\n//   };\r\n// };\r\n\r\nconst filterChange = createAction('ContactForm/FilterChange');\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterChange,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SiteNav\":\"SiteNav_SiteNav__3WTfK\",\"SiteNavLink\":\"SiteNav_SiteNavLink__biQgr\",\"NavLink\":\"SiteNav_NavLink__2c8KP\",\"NavLinkActive\":\"SiteNav_NavLinkActive__3Us4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"AppBar_Navbar__3BcYi\"};","import { combineReducers } from 'redux';\r\n// import types from './ContactForm-types';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './ContactForm-actions';\r\nconst {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} = actions;\r\n\r\n// const itemsReducer = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD_CONTACT:\r\n//       if (state.find(contact => contact.name === payload.name)) {\r\n//         alert(`${payload.name} is already in contacts.`);\r\n//         return state;\r\n//       }\r\n//       return [...state, payload];\r\n//     case types.DELETE_CONTACT:\r\n//       return state.filter(({ id }) => id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const findContact = (state, payload) => {\r\n//   if (state.find(contact => contact.name === payload.name)) {\r\n//     alert(`${payload.name} is already in contacts.`);\r\n//     return state;\r\n//   }\r\n// };\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    if (state.find(contact => contact.name === payload.name)) {\r\n      alert(`${payload.name} is already in contacts.`);\r\n      return state;\r\n    }\r\n    return [...state, payload];\r\n  },\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\n// const filterReducer = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER_CHANGE:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst filterReducer = createReducer('', {\r\n  'ContactForm/FilterChange': (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loading,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './ContactForm/ContactForm-reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\n// import persistReducer from 'redux-persist/es/persistReducer';\r\n\r\n// const contactsPersistConfig = {\r\n//   key: 'contacts',\r\n//   storage,\r\n//   blacklist: ['filter'],\r\n// };\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n// const rootReducer = {\r\n//   contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n// };\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./SiteNav.module.css\";\r\n\r\nconst SiteNav = () => {\r\n  return (\r\n    <ul className={styles.SiteNav}>\r\n      {/* <li className={styles.SiteNavLink}>\r\n        <NavLink\r\n          to=\"/\"\r\n          exact\r\n          className={styles.NavLink}\r\n          activeClassName={styles.NavLinkActive}\r\n        >\r\n          Employee profiles\r\n        </NavLink>\r\n      </li> */}\r\n      <li className={styles.SiteNavLink}>\r\n        <NavLink\r\n          to=\"/\"\r\n          className={styles.NavLink}\r\n          activeClassName={styles.NavLinkActive}\r\n        >\r\n          Talent Management\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SiteNav;","import React from 'react';\r\nimport SiteNav from './SiteNav'\r\nimport styles from './AppBar.module.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nconst AppBar = () => {\r\n  return <Navbar bg=\"primary\" variant=\"dark\" className={styles.Navbar} >\r\n<SiteNav/>\r\n    </Navbar>;\r\n};\r\n\r\nexport default AppBar;\r\n","// import { Component } from 'react';\r\nimport AppBar from './components/AppBar';\r\n// import ContactForm from './components/ContactForm';\r\n// import Filter from './components/Filter';\r\n// import ContactList from './components/ContactList';\r\n// // import DropdownWithFilter from './components/DropdownWithFilter'\r\n// import ModalWindow from './components/Modal';\r\n// import Container from 'react-bootstrap/Container';\r\n// import Row from 'react-bootstrap/Row';\r\n// import Col from 'react-bootstrap/Col';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import styles from './App.css';\r\n// import sModal from './components/Modal/Modal.module.css';\r\n// import sContactList from './components/ContactList/ContactList.module.css';\r\n// import sFilter from './components/Filter/Filter.module.css';\r\nimport React, { Suspense, lazy } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { v4 as genId } from 'uuid';\r\n\r\n\r\n// const MAList = lazy(() =>\r\n//   import(\"./pages/MAList\" /*WebpackChunkName: MAList */)\r\n// );\r\nconst TalentManagement = lazy(() =>\r\n  import(\"./pages/TalentManagement\" /*WebpackChunkName: TalentManagement */)\r\n);\r\nconst Profile = lazy(() =>\r\n  import(\"./pages/Profile\" /*WebpackChunkName: Profile */)\r\n);\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <AppBar />\r\n      <Suspense\r\n        fallback={\r\n      <p>Loading...</p>\r\n        }\r\n      >\r\n        <Switch>\r\n          <Route exact path=\"/\" component={TalentManagement} />\r\n          <Route path=\"/:name\" component={Profile} />\r\n          {/* <Route path=\"/talent\" component={TalentManagement} /> */}\r\n          <Route component={TalentManagement} />\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n// class App extends Component {\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <AppBar className={styles.AppBar} />\r\n//         <Container>\r\n//           <Row>\r\n//             <Col>\r\n//               <h2 className={styles.h2Header}>Add new employee</h2>\r\n\r\n//               <ModalWindow\r\n//                 text={\"Add student's info\"}\r\n//                 className={sModal.ModalWindow}\r\n//               >\r\n//                 {<ContactForm />}\r\n//               </ModalWindow>\r\n//               <ModalWindow text={\"Add employee's info\"}>\r\n//                 {<ContactForm />}\r\n//               </ModalWindow>\r\n//             </Col>\r\n//             <Col>\r\n//               <h2 className={styles.h2Header}>Employees</h2>\r\n//               <Filter className={sFilter.Filter} />\r\n//               <ContactList className={sContactList.CnctList} />\r\n//             </Col>\r\n//           </Row>\r\n//         </Container>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}