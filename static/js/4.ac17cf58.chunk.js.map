{"version":3,"sources":["components/Filter/Filter.module.css","redux/ContactForm/ContactForm-selectors.js","components/Filter/Filter.js","components/ContactList/ContactListItem/ContactListItem.js","redux/ContactForm/ContactForm-operations.js","components/ContactList/ContactList.js","pages/TalentManagement/TalentManagement.js","components/AccordionBtn/AccordionItem/AccordionItem.js","components/AccordionBtn/AccordionBtn.js","components/ContactList/ContactList.module.css","components/ContactList/ContactListItem/ContactListItem.module.css"],"names":["module","exports","getFilter","state","contacts","filter","getContacts","createSelector","items","normalizedFilter","toLowerCase","name","includes","Filter","this","props","filterState","onFilterChange","Form","inline","FormControl","type","value","onChange","placeholder","className","Button","variant","Component","connect","selectors","dispatch","event","actions","filterChange","target","withRouter","id","onDeleteContact","styles","listItem","Link","to","pathname","onClick","buttonListItem","axios","defaults","baseURL","contactId","deleteContactRequest","delete","then","deleteContactSuccess","catch","error","deleteContactError","fetchContactsRequest","get","data","fetchContactsSuccess","fetchContactsError","message","ContactList","onLoad","contactsList","map","contactList","operations","TalentManagement","Container","Row","Col","AccordionBtn","text","subtext","sFilter","sContactList","CnctList","AccordionItem","item","Card","href","Accordion","defaultActiveKey","Header","Toggle","as","eventKey","Collapse","Body","ListGroup","Item"],"mappings":"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","file":"static/js/4.ac17cf58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelFilter\":\"Filter_labelFilter__2qM0V\",\"inputFilter\":\"Filter_inputFilter__3ZATY\",\"Filter\":\"Filter_Filter__1ujoJ\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getItems = state => state.contacts.items;\r\n\r\n// const getContacts = state => {\r\n//   const filter = getFilter(state);\r\n//   const items = getItems(state);\r\n\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return items.filter(({ name }) =>\r\n//     name ? name.toLowerCase().includes(normalizedFilter) : false,\r\n//   );\r\n// };\r\n\r\nconst getContacts = createSelector([getFilter, getItems], (filter, items) => {\r\n  if (!filter) {\r\n    return [];\r\n  }\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return items.filter(({ name }) =>\r\n    name ? name.toLowerCase().includes(normalizedFilter) : false,\r\n  );\r\n});\r\n\r\nexport default { getFilter, getContacts };\r\n","import { Component } from 'react';\r\n// import { v4 as genId } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n// import styles from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/ContactForm/ContactForm-actions';\r\nimport selectors from '../../redux/ContactForm/ContactForm-selectors';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    // const filterInputId = genId();\r\n    const { filterState, onFilterChange } = this.props;\r\n    return (\r\n      <Form inline>\r\n        <FormControl\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filterState}\r\n          onChange={onFilterChange}\r\n          placeholder=\"Name eingeben...\"\r\n          className=\"mr-sm-2\"\r\n        />\r\n        <Button variant=\"primary\">Suchen</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  filters: PropTypes.string,\r\n  onFilterChange: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filterState: selectors.getFilter(state),\r\n  // filterState: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onFilterChange: event => dispatch(actions.filterChange(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n// import ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nconst ContactListItem = ({ name, id, onDeleteContact }) => {\r\n  return (\r\n    <li id={id} className={styles.listItem}>\r\n      <Link className={styles.Link}\r\n                to={{ pathname: `/profile/${name}` }}>\r\n      {name}\r\n      <button\r\n        onClick={() => {\r\n          onDeleteContact(id);\r\n        }}\r\n        className={styles.buttonListItem}\r\n      >\r\n        Delete\r\n      </button>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  id: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\nexport default withRouter(ContactListItem);\r\n","import axios from 'axios';\r\nimport actions from './ContactForm-actions';\r\n\r\naxios.defaults.baseURL = ' http://localhost:4000';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(actions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get('./contacts')\r\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(actions.fetchContactsError(error.message)));\r\n};\r\n\r\nconst addContact = ({ name, semester }) => dispatch => {\r\n  dispatch(actions.addContactRequest());\r\n  axios\r\n    .post('/contacts', { name, semester })\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch(error => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(actions.deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(actions.deleteContactError(error)));\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts };\r\n","import { Component } from 'react';\r\nimport ContactListItem from './ContactListItem/ContactListItem';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\nimport { connect } from 'react-redux';\r\nimport operations from '../../redux/ContactForm/ContactForm-operations';\r\nimport selectors from '../../redux/ContactForm/ContactForm-selectors';\r\n\r\nclass ContactList extends Component {\r\n  componentDidMount() {\r\n    this.props.onLoad();\r\n  }\r\n  render() {\r\n    const { contactsList, onDeleteContact } = this.props;\r\n    return (\r\n      <ul>\r\n        {contactsList.map(({ name, id }) => {\r\n          return (\r\n            <ContactListItem\r\n              name={name}\r\n              // number={number}\r\n              key={id}\r\n              id={id}\r\n              onDeleteContact={onDeleteContact}\r\n              className={styles.contactList}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\n// const getContactsToShow = ({ filter, items }) => {\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return items.filter(({ name }) =>\r\n//     name ? name.toLowerCase().includes(normalizedFilter) : false,\r\n//   );\r\n// };\r\n\r\nconst mapStateToProps = state => ({\r\n  contactsList: selectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: contactId => dispatch(operations.deleteContact(contactId)),\r\n  onLoad: () => dispatch(operations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\n// import AppBar from '../../components/AppBar';\r\n// import ContactForm from '../../components/ContactForm';\r\nimport Filter from '../../components/Filter';\r\nimport ContactList from '../../components/ContactList';\r\nimport AccordionBtn from '../../components/AccordionBtn'\r\n// import DropdownWithFilter from './components/DropdownWithFilter'\r\n// import ModalWindow from '../../components/Modal';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import styles from '../../App.css';\r\n// import sModal from '../../components/Modal/Modal.module.css';\r\nimport sContactList from '../../components/ContactList/ContactList.module.css';\r\nimport sFilter from '../../components/Filter/Filter.module.css';\r\n\r\n// const competenceList = {Methodenkompetenz: [], Sozialkompetenz: [], Fachkompetenz: [], Selbstkompetenz: []} \r\n\r\n\r\n\r\nconst TalentManagement = () => {\r\n    return(\r\n        <>\r\n         <Container>\r\n           <h2>Wonach suchen Sie?</h2>\r\n           <Row>\r\n             <Col>\r\n               <h4 >Kompetenzen</h4>\r\n<AccordionBtn text={\"Methodenkompetenz\"} subtext={['Problemlösung', 'Rhetorik', 'Präsentation','Moderation','Lernkompetenz','Lehrkompetenz/Didaktik','Projektmanagement']}/>\r\n<AccordionBtn text={\"Sozialkompetenz\"} subtext={['Kommunikation', 'Teamarbeit', 'Mitarbeiterführung']}/>\r\n<AccordionBtn text={\"Fachkompetenz\"} subtext={['Arbeitssicherheit', 'Datenschutz','EDV-Kenntnisse','Finanzmanagement','Fremdsprachen','Informationssicherheit','Marketing/Öffentlichkeitsarbeit','Personal und Organisation','Personalratsarbeit','Qulitätsmanagement','Recht und Verwaltungskompetenzen','Fachliche Schulungen in den FK', 'BSM', 'LS','ENG','INF','Sonstige Fachkenntnisse']}/>\r\n<AccordionBtn text={\"Selbstkompetenz\"} subtext={['Leistungsvermögen','Entschlusskraft','Intelligenz','Selbstkritik','Flexibilität','Selbstmanagement','Gesundheitskompetenz']}/>\r\n               {/* <ModalWindow\r\n                 text={\"Add student's info\"}\r\n                 className={sModal.ModalWindow}\r\n               >\r\n                 {<ContactForm />}\r\n               </ModalWindow>\r\n               <ModalWindow text={\"Add employee's info\"}>\r\n                 {<ContactForm />}\r\n               </ModalWindow> */}\r\n             </Col>\r\n             <Col>\r\n               <h4>Mitarbeiter</h4>\r\n               <Filter className={sFilter.Filter} />\r\n               <ContactList className={sContactList.CnctList} />\r\n             </Col>\r\n           </Row>\r\n         </Container>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default TalentManagement;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\n// import ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nconst AccordionItem = ({ item }) => {\r\n  return (\r\n      <Card.Link href=\"#\">{item}</Card.Link>\r\n  );\r\n};\r\n\r\nexport default AccordionItem;\r\n","import React from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport AccordionItem from './AccordionItem'\r\n\r\nconst AccordionBtn = ({text, subtext}) => {\r\n  return (\r\n    <Accordion defaultActiveKey=\"0\">\r\n      <Card>\r\n        <Card.Header>\r\n          <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n            {text}\r\n          </Accordion.Toggle>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey=\"1\">\r\n          <Card.Body>\r\n            <ListGroup variant=\"flush\">\r\n              {subtext.map((item) => <ListGroup.Item key={item}><AccordionItem item={item}/></ListGroup.Item>)}\r\n            </ListGroup>\r\n          </Card.Body>\r\n          {/* <Card.Body>Hello! I'm the body</Card.Body> */}\r\n        </Accordion.Collapse>\r\n      </Card>\r\n      {/* <Card>\r\n    <Card.Header>\r\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n        Click me!\r\n      </Accordion.Toggle>\r\n    </Card.Header>\r\n    <Accordion.Collapse eventKey=\"1\">\r\n      <Card.Body>Hello! I'm another body</Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card> */}\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default AccordionBtn;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__I-q_r\",\"ListGroup\":\"ContactList_ListGroup__2u_0U\",\"CncttList\":\"ContactList_CncttList__1QlRG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__369G1\",\"buttonListItem\":\"ContactListItem_buttonListItem__BxexE\"};"],"sourceRoot":""}